{"version":3,"file":"static/js/485.e977f6bf.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,GAAAA,GAAH,oaAoBJC,EAAWD,EAAAA,GAAAA,GAAH,0hBAEA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,QAAQC,IAApB,IACT,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,IAUG,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,OAAOE,KAAnB,IAEO,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,MAAMC,MAAlB,IAWbC,GAAOX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,gGAMJa,EAAQb,EAAAA,GAAAA,EAAH,wOAIG,SAAAE,GAAC,gBAAOA,EAAEC,MAAMW,MAAM,GAArB,SACJ,SAAAZ,GAAC,gBAAOA,EAAEC,MAAMW,MAAM,GAArB,SAGF,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,UAAUC,CAAtB,IACC,SAAAC,GAAC,OAAIA,EAAEd,MAAMe,YAAYb,IAAxB,I,kBC3DL,SAASc,EAAT,GAAiC,IAAVC,EAAS,EAATA,OAE5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,8BACKF,EAAOG,OAAS,IACb,SAACxB,EAAD,UACKqB,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACR,SAAC1B,EAAD,WACI,UAACU,EAAD,CAAMiB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA1C,UACKM,GACK,gBAAKI,IAAG,yCAAoCJ,GAAeK,IAAKP,KACpE,gBAAKM,IAAKE,EAAcD,IAAKP,KAE/B,SAACZ,EAAD,UAAQY,QANDC,EADP,OAc/B,C,mJCzBYQ,EAAOlC,EAAAA,GAAAA,KAAH,oIASJa,EAAQb,EAAAA,GAAAA,GAAH,sVAIG,SAAAE,GAAC,OAAIA,EAAEC,MAAMY,UAAUoB,CAAtB,IACL,SAAAjC,GAAC,OAAIA,EAAEC,MAAMG,OAAOC,IAAnB,IAIG,SAAAL,GAAC,OAAIA,EAAEC,MAAMY,UAAUqB,EAAtB,IAID,SAAAlC,GAAC,OAAIA,EAAEC,MAAMY,UAAUsB,GAAtB,I,2BClBP,SAASC,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,2FAChBF,GAAa,GADG,UAEGG,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGhBN,EAAUM,EAAKC,SACfL,GAAa,GAJG,2CAAH,qDAOjBE,GACH,GAAE,KAGC,UAACV,EAAD,YACI,SAACrB,EAAD,8JACA,SAACmC,EAAA,EAAD,CAAY5B,OAAQA,IACnBqB,IAAa,SAACQ,EAAA,EAAD,MAGzB,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    @media screen and (min-width: 320px) {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 300px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n\n    @media screen and (min-width: 768px) {\n        max-width: 620px;\n        row-gap: 30px;\n        column-gap: 20px\n    }\n\n    @media screen and (min-width: 1200px) {\n        max-width: 940px;\n    }\n`;\n\nexport const ListItem = styled.li`\n    max-width: 300px;\n    border-bottom: ${p => p.theme.borders.bold};\n    color: ${p => p.theme.colors.text};\n    border-color: #9202d4;\n    transition: transform 250ms linear,\n    background-color 250ms linear,\n    border-radius 250ms linear,\n    color 250ms linear;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.1);\n        color: ${p => p.theme.colors.white};\n        background-color: #b938f4;\n        border-radius: ${p => p.theme.radii.normal};\n    }\n\n    @media screen and (max-width: 767px) {\n        &:not(:last-child) {\n            margin-bottom: 30px;\n        }\n    }\n\n`;\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport const Title = styled.p`\n    display: flex;\n    justify-content: center;\n    max-width: 200px;\n    margin-bottom: ${p => `${p.theme.space[4]}px`};\n    margin-top: ${p => `${p.theme.space[4]}px`};\n    padding: 5px;\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n    font-weight: ${P => P.theme.fontWeights.bold};\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { Title, List, ListItem, Link } from \"./MoviesList.styled\";\nimport defaultImage from \"../../img/default-poster.jpg\";\n\n\nexport default function TrendingList({movies}) {\n\n    const location = useLocation();\n\n    return (\n        <>\n            {movies.length > 0 && (\n                <List>\n                    {movies.map(({ title, id, poster_path }) =>\n                        <ListItem key={id}>\n                            <Link to={`/movies/${id}`} state={{ from: location }}>\n                                {poster_path\n                                    ? <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n                                : <img src={defaultImage} alt={title} />}\n                                \n                                <Title>{title}</Title>\n                            </Link>\n                        </ListItem>\n                    )}\n                </List>)}\n        </>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Main = styled.main`\n    padding-top: 20px;\n\n    @media screen and (min-width: 1200px) {\n        padding-top: 40px;\n    }\n\n`;\n\nexport const Title = styled.h1`\n    @media screen and (min-width: 320px) {\n        margin-bottom: 20px;\n        text-align: center;\n        font-size: ${p => p.theme.fontSizes.l};\n        color: ${p => p.theme.colors.text}\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: ${p => p.theme.fontSizes.xl};\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: ${p => p.theme.fontSizes.xxl};\n    }\n    \n`;\n","import { getTrendingMovies } from \"services/api\";\nimport { useState, useEffect } from \"react\";\nimport { Main, Title } from \"./Home.styled\";\nimport Loader from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setIsLoading(true);\n            const data = await getTrendingMovies();\n            setMovies(data.results);\n            setIsLoading(false);\n        };\n\n        fetchMovies();\n    }, []);\n\n    return (\n        <Main>\n            <Title>Фільми в тренді на сьогодні</Title>\n            <MoviesList movies={movies} />\n            {isLoading && <Loader />}\n        </Main>\n    );\n};\n"],"names":["List","styled","ListItem","p","theme","borders","bold","colors","text","white","radii","normal","Link","NavLink","Title","space","fontSizes","m","P","fontWeights","TrendingList","movies","location","useLocation","length","map","title","id","poster_path","to","state","from","src","alt","defaultImage","Main","l","xl","xxl","Home","useState","setMovies","isLoading","setIsLoading","useEffect","fetchMovies","getTrendingMovies","data","results","MoviesList","Loader"],"sourceRoot":""}