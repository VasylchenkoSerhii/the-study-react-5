{"version":3,"file":"static/js/691.fa530b90.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    @media screen and (min-width: 320px) {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 300px;\n        margin-left: auto;\n        margin-right: auto;\n    }\n\n    @media screen and (min-width: 768px) {\n        max-width: 620px;\n        row-gap: 30px;\n        column-gap: 20px\n    }\n\n    @media screen and (min-width: 1200px) {\n        max-width: 940px;\n    }\n`;\n\nexport const ListItem = styled.li`\n    max-width: 300px;\n    border-bottom: ${p => p.theme.borders.bold};\n    color: ${p => p.theme.colors.text};\n    border-color: #9202d4;\n    transition: transform 250ms linear,\n    background-color 250ms linear,\n    border-radius 250ms linear,\n    color 250ms linear;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.1);\n        color: ${p => p.theme.colors.white};\n        background-color: #b938f4;\n        border-radius: ${p => p.theme.radii.normal};\n    }\n\n    @media screen and (max-width: 767px) {\n        &:not(:last-child) {\n            margin-bottom: 30px;\n        }\n    }\n\n`;\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport const Title = styled.p`\n    display: flex;\n    justify-content: center;\n    max-width: 200px;\n    margin-bottom: ${p => `${p.theme.space[4]}px`};\n    margin-top: ${p => `${p.theme.space[4]}px`};\n    padding: 5px;\n    text-align: center;\n    font-size: ${p => p.theme.fontSizes.m};\n    font-weight: ${P => P.theme.fontWeights.bold};\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { Title, List, ListItem, Link } from \"./MoviesList.styled\";\nimport defaultImage from \"../../img/default-poster.jpg\";\n\n\nexport default function TrendingList({movies}) {\n\n    const location = useLocation();\n\n    return (\n        <>\n            {movies.length > 0 && (\n                <List>\n                    {movies.map(({ title, id, poster_path }) =>\n                        <ListItem key={id}>\n                            <Link to={`/movies/${id}`} state={{ from: location }}>\n                                {poster_path\n                                    ? <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n                                : <img src={defaultImage} alt={title} />}\n                                \n                                <Title>{title}</Title>\n                            </Link>\n                        </ListItem>\n                    )}\n                </List>)}\n        </>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Main = styled.main`\n    padding-top: 20px;\n\n    @media screen and (min-width: 1200px) {\n        padding-top: 40px;\n    }\n`;\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    margin-bottom: 30px;\n    max-width: 320px;\n    height: 40px;\n    margin-left: auto;\n    margin-right: auto;\n\n    @media screen and (min-width: 768px) {\n        max-width: 400px;\n    }\n\n    @media screen and (min-width: 768px) {\n        max-width: 600px;\n    }\n`;\n\nexport const FormInput = styled.input`\n    min-width: 70%;\n    height: 40px;\n    outline: none;\n    font-size: ${p => p.theme.fontSizes.m};\n    color: ${p => p.theme.colors.text};\n    border: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.lightAccent};\n    transition: border-color 250ms linear;\n\n    &:focus {\n        border-color: ${p => p.theme.colors.accent};\n    }\n\n    @media screen and (min-width: 768px) {\n        min-width: 80%;\n    }\n`;\n\nexport const FormBtn = styled.button`\n    display: inline-block;\n    min-width: 30%;\n    height: 100%;\n    border: none;\n    color: ${p => p.theme.colors.text};\n    background-color: ${p => p.theme.colors.lightAccent};\n    transition: color 250ms linear, background-color 250ms linear;\n\n    &:hover,\n    &:focus {\n        color: ${p => p.theme.colors.white};\n        background-color: ${p => p.theme.colors.accent};\n    }\n\n    @media screen and (min-width: 768px) {\n        min-width: 20%;\n    }\n`;","import { useState, useEffect } from \"react\";\nimport { getMoviesByQuery } from \"services/api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { Main, SearchForm, FormInput, FormBtn } from \"./Movies.styled\";\nimport Loader from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\n\nexport default function Movies() {\n\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryParams = searchParams.get(\"query\") ?? \"\";\n\n    useEffect(() => {\n\n        if (queryParams === \"\") {\n            return;\n        };\n        \n        const fetchMoviesByQuery = async () => {\n            setIsLoading(true);\n            const data = await getMoviesByQuery(queryParams);\n\n            if (data.results.length === 0) {\n                toast(\"Не знайдено жодного фільму\");\n                setIsLoading(false);\n                return;\n            };\n\n            setMovies(data.results);\n            setIsLoading(false);\n        };\n\n        fetchMoviesByQuery();\n    }, [queryParams])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        if (query === \"\") {\n            toast(\"Введіть назву фільма\");\n            return;\n        };\n        setSearchParams(query !== \"\" ? { query } : {});\n        setQuery(\"\");\n    };\n\n    return (\n        <Main>\n            <SearchForm onSubmit={handleSubmit}>\n                <FormInput\n                    value={query}\n                    type=\"text\"\n                    placeholder=\"Знайти фільм\"\n                    onChange={e => setQuery(e.target.value.trim())}\n                />\n                <FormBtn type=\"submit\">\n                    Знайти\n                </FormBtn>\n            </SearchForm>\n            {movies.length > 0 && <MoviesList movies={movies} />}\n            {isLoading && <Loader />}\n        </Main>\n    );\n};\n"],"names":["List","styled","ListItem","p","theme","borders","bold","colors","text","white","radii","normal","Link","NavLink","Title","space","fontSizes","m","P","fontWeights","TrendingList","movies","location","useLocation","length","map","title","id","poster_path","to","state","from","src","alt","defaultImage","Main","SearchForm","FormInput","lightAccent","accent","FormBtn","Movies","useState","setMovies","query","setQuery","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","fetchMoviesByQuery","getMoviesByQuery","data","results","toast","onSubmit","e","preventDefault","value","type","placeholder","onChange","target","trim","MoviesList","Loader"],"sourceRoot":""}